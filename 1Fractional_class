#include<iostream>
using namespace std;


class Fraction{
    int numerator;
    int denominator;
    
    public:
        Fraction(int numerator, int denominator){
            this->numerator=numerator;
            this->denominator=denominator;
        }
        
        void print(){
            cout<<this->numerator<<"/"<<this->denominator<<endl;
        }
        
        void simplify(){
            int gcd=1;
            int j=min(this->numerator,this->denominator);
            for(int i=1;i<=j;i++){
                if(this->numerator%i==0 && this->denominator%i==0){
                    gcd=i;
                }
            }
            this->numerator=this->numerator/gcd;
            this->denominator=this->denominator/gcd;
        }
        
        void add(Fraction const &f2){             //passing f2 as reference as no space require  and const is used because we don't want our main f2 to be changed in any case   
            int lcm=denominator*f2.denominator;   //f1=10/2  f2=15/4   ---> (10 * 4(==x) + 15 * 2(==y) ) / lcm   
            int x=lcm/denominator;
            int y=lcm/f2.denominator;
            int num=x*numerator + y*f2.numerator;
            
            numerator=num;
            denominator=lcm;
            
            simplify();
            cout<<numerator<<"/"<<denominator<<endl;
        }
};

int main(){
    Fraction f1(10,2),f2(15,4);
    f1.add(f2);
}
